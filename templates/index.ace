= doctype html
html
  head
    = css
      #search-results tr:hover,
      #view-results tr:hover,
      #view-page th:hover {
        background-color: lightgrey;
        cursor: pointer;
      }
      #page-switcher {
        width: 100%;
        text-align: center;
      }
      #page-switcher button {
        font-size: 24px;
        font-weight: 600;
        margin: 1em;
        padding: .3em;
      }
      #search-page {
        display: none;
      }
      .delete-btn {
        color: white;
        background-color: #d9534f;
        border-color: #d43f3a;
        border-radius: 8px;
      }
  body
    div#page-switcher
      button#view-library onclick="showViewPage()" View Library
      button#add-books onclick="showSearchPage()" Add Books

    div#search-page
      form id="search-form" onsubmit="return false"
        input name="search"
        button type="submit" onclick="submitSearch()" Search

      table width="100%"
        thead
          tr style="text-align: left;"
            th width="40%" Title
            th width="30%" Author
            th width="10%" Year
            th width="10%" Format
            th width="20%" ID
        tbody id="search-results"

    div#view-page
      form#filter-view-results style="float: right;"
        select name="filter" style="font-size: 18px; min-width: 10em;" onchange="filterViewResults()"
          option value="all" All Books
          option value="fiction" Fiction
          option value="nonfiction" Nonfiction

      table width="100%"
        thead
          tr style="text-align: left;"
            th width="45%" onclick="sortBooks('title')" Title
            th width="35%" onclick="sortBooks('author')" Author
            th width="15%" onclick="sortBooks('classification')" Classification
            th width="5%"
        tbody#view-results
          {{range .Books}}
            tr id="book-row-{{.PK}}"
              td {{.Title}}
              td {{.Author}}
              td {{.Classification}}
              td
                button.delete-btn onclick="deleteBook({{.PK}})" Delete
          {{end}}

    script type="text/javascript" src="http://code.jquery.com/jquery-2.1.4.min.js"
    = javascript
      $(document).ready(function() {
        const filter = {{.Filter}};
        $(`#filter-view-results option[value="${filter}"]`).prop("selected", true);
      });

      function rebuildBookCollection(data) {
        const books = JSON.parse(data);
        if (!books) return;

        $('#view-results').empty();

        books.forEach(appendBook);
      }

      function filterViewResults() {
        $.ajax({
          method: 'GET',
          url: '/books',
          data: $('#filter-view-results').serialize(),
          success: rebuildBookCollection
        })
      }

      function sortBooks(columnName) {
        $.ajax({
          method: 'GET',
          url: `/books?sortBy=${columnName}`,
          success: rebuildBookCollection
        })
      }

      function appendBook(book) {
        $('#view-results').append(`
          <tr id="book-row-${book.PK}">
            <td>${book.Title}</td>
            <td>${book.Author}</td>
            <td>${book.Classification}</td>
            <td>
              <button class="delete-btn" onclick="deleteBook(${book.PK})">
                Delete
              </button>
            </td>
          </tr>
        `);
      }

      function deleteBook(pk) {
        $.ajax({
          method: 'DELETE',
          url: `/books/${pk}`,
          success() {
            $(`#book-row-${pk}`).remove();
          }
        });
      }

      function showSearchPage() {
        $('#search-page').show();
        $('#view-page').hide();
      }

      function showViewPage() {
        $('#search-page').hide();
        $('#view-page').show();
      }

      function submitSearch() {
        $.ajax({
          url: '/search',
          method: 'POST',
          data: $('#search-form').serialize(),
          success(data) {
            const parsed = JSON.parse(data);
            if (!parsed) return;

            const searchResults = $('#search-results');
            searchResults.empty();

            parsed.forEach(result => {
              const row = $(`
                <tr>
                  ${Object.keys(result).map(key =>
                    `<td>${result[key]}</td>`
                  ).join(' ')}
                </tr>
              `);

              searchResults.append(row);
              row.on('click', () => {
                $.ajax({
                  url: `/books?id=${result.ID}`,
                  method: 'PUT',
                  success(_data) {
                    const book = JSON.parse(_data);

                    if (!book) return;
                    appendBook(book);
                  }
                })
              })
            })
          }
        });

        return false;
      }
